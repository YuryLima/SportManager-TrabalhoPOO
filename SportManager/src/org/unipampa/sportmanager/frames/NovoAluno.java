/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.unipampa.sportmanager.frames;

import java.util.List;
import javax.swing.JOptionPane;
import org.unipampa.sportmanager.aluno.Aluno;
import org.unipampa.sportmanager.esportes.Turma;
import org.unipampa.sportmanager.listainterface.CrudAluno;
import org.unipampa.sportmanager.listainterface.ListaAlunos;

/**
 *
 * @author yuryalencar
 */
public class NovoAluno extends javax.swing.JFrame {

    ListaAlunos listAlunos;
    Turma turma;
    
    /**
     * Método para se extrair o código(Matrícula)
     * de um toString() e de um aluno.
     * @return - Tipo:int , retorna o valor
     * de uma matrícula.
     */
    private int getCod(String extract){
        String cod="";
        
        for (int i = 0; i < extract.length(); i++) {
            if(extract.charAt(i) == ' '){
                break;
            } else {
                cod += extract.charAt(i);
            }
        }
        
        return Integer.parseInt(cod);
    }
    
    /**
     * Creates new form NovoAluno
     */
    public NovoAluno(CrudAluno listAlunos, Turma turma) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Adicionar novo aluno");
        
        this.listAlunos = (ListaAlunos) listAlunos;
        this.turma = turma;
        
        List<Aluno> listaTotal = this.listAlunos.getLista();
        List<Aluno> listaTurma = turma.getAlunos();
        
        for (Aluno aluno : listaTotal) {
            if(!listaTurma.isEmpty()){
                for (Aluno alunoTurma : listaTurma) {
                    if(!aluno.toString().equals(alunoTurma.toString()) &&
                            aluno.getIdade() <= turma.getMaiorIdade() &&
                            aluno.getIdade() >= turma.getMenorIdade()){
                        jComboBoxAlunos.addItem(aluno.toString());
                    }
                }
            } else {
                if(aluno.getIdade() <= turma.getMaiorIdade() &&
                        aluno.getIdade() >= turma.getMenorIdade()){
                    jComboBoxAlunos.addItem(aluno.toString());
                }
            }
        }
        
        if(jComboBoxAlunos.getItemCount() == 0){
            JOptionPane.showMessageDialog(null, "Nenhum aluno cadastrado pode ser adicionado nesta turma,"
                    + " verifique se ela não esta cheia ou se existe aluno da faixa etária");
            jButtonAdicionarAdicionarAlunos.setEnabled(false);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAdicionarAdicionarAlunos = new javax.swing.JButton();
        jButtonVoltarAdicionarAlunos = new javax.swing.JButton();
        jComboBoxAlunos = new javax.swing.JComboBox<>();
        jLabelAlunos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonAdicionarAdicionarAlunos.setText("Adicionar");
        jButtonAdicionarAdicionarAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarAdicionarAlunosActionPerformed(evt);
            }
        });

        jButtonVoltarAdicionarAlunos.setText("Voltar");
        jButtonVoltarAdicionarAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarAdicionarAlunosActionPerformed(evt);
            }
        });

        jLabelAlunos.setText("Escolha o aluno a ser cadastrado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonVoltarAdicionarAlunos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAdicionarAdicionarAlunos))
                    .addComponent(jComboBoxAlunos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(jLabelAlunos)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelAlunos)
                .addGap(29, 29, 29)
                .addComponent(jComboBoxAlunos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdicionarAdicionarAlunos)
                    .addComponent(jButtonVoltarAdicionarAlunos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVoltarAdicionarAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarAdicionarAlunosActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonVoltarAdicionarAlunosActionPerformed

    private void jButtonAdicionarAdicionarAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarAdicionarAlunosActionPerformed
        // TODO add your handling code here:
        if(this.turma.addAluno(listAlunos.buscarMatricula(getCod(jComboBoxAlunos.getSelectedItem().toString())))){
            this.dispose();
            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!");
        }
    }//GEN-LAST:event_jButtonAdicionarAdicionarAlunosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovoAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovoAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovoAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovoAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovoAluno(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarAdicionarAlunos;
    private javax.swing.JButton jButtonVoltarAdicionarAlunos;
    private javax.swing.JComboBox<String> jComboBoxAlunos;
    private javax.swing.JLabel jLabelAlunos;
    // End of variables declaration//GEN-END:variables
}
