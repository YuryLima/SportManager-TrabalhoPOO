/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.unipampa.sportmanager.frames;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.unipampa.sportmanager.esportes.Esporte;
import org.unipampa.sportmanager.esportes.Turma;
import org.unipampa.sportmanager.aluno.Aluno;
import org.unipampa.sportmanager.listainterface.CrudAluno;
import org.unipampa.sportmanager.listainterface.CrudTurma;
import org.unipampa.sportmanager.listainterface.ListaAlunos;
import org.unipampa.sportmanager.listainterface.ListaTurmas;

/*
Faltando fazer as pesquisas(Turma), , NovoAluno setando mais do que necessário
no comboBox
 */
/**
 *
 * @author junio
 * @author Lucas Correa
 * @author yuryalencar
 */
public class GerenciadorTurmas extends javax.swing.JFrame {

    private ListaTurmas listaTurmas;
    private ListaAlunos listaAlunos;
    private Turma t;
    private boolean isEdit;

    /**
     * Creates new form Turma
     */
    public GerenciadorTurmas(CrudAluno listaAlunos, CrudTurma listaTurmas) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Gerenciador de turmas");

        this.listaTurmas = (ListaTurmas) listaTurmas;
        this.listaAlunos = (ListaAlunos) listaAlunos;

        jTabbedPaneGerenciadorTurmas.setEnabledAt(1, false);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(2, false);

        jButtonRemoverAlunoTurma.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jButtonVizualizarAlunos.setEnabled(false);
        jComboBoxBuscaEsporte.setEnabled(false);

        for (Esporte modalidade : Esporte.values()) {
            jComboBoxModalidadeTurma.addItem(modalidade.getEsporte());
            jComboBoxBuscaEsporte.addItem(modalidade.getEsporte());
        }
        
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    /**
     * Método para fazer alguma verificação, com um JOPtionPane com sim e não.
     *
     * @param message - Tipo:String, contendo a mensagem para a verificação.
     * @return - true caso a resposta tem sido sim e false caso contrário.
     */
    private boolean verificacao(String message) {
        int resposta = JOptionPane.showConfirmDialog(null, message, "Verificação",
                JOptionPane.YES_NO_OPTION);
        return resposta == JOptionPane.YES_OPTION;
    }

    /**
     * Método para a verificação se no campo só contem numeros
     *
     * @param evt - evento key
     */
    private void soNumeros(java.awt.event.KeyEvent evt) {
        if (!(Character.isDigit(evt.getKeyChar()))) {
            evt.consume();
        }
    }

    /**
     *
     * @param turm
     */
    private void setarCampos(int turm) {
        Turma turma = listaTurmas.buscarTurma(turm);

        jTextFieldMaiorIdadeTurma.setText(String.valueOf(turma.getMaiorIdade()));
        jTextFieldMenorIdadeTurma.setText(String.valueOf(turma.getMenorIdade()));
        jFormattedHorarioTurma.setText(String.valueOf(turma.getHorario()));
        jComboBoxModalidadeTurma.setSelectedItem(turma.getModalidade());
        jTextFieldMaximoAlunosTurma.setText(String.valueOf(turma.getMAX_ALUNO()));
    }

    /**
     * Métodos para limpar os campos.
     */
    private void limparCampos() {
        jTextFieldMaiorIdadeTurma.setText("");
        jTextFieldMenorIdadeTurma.setText("");
        jTextFieldMaximoAlunosTurma.setText("");
        jFormattedHorarioTurma.setText("");

    }

    private int convertHora(String horaString) {
        int end = 0;
        int minutosGeral = 0;
        String horaS = "", minutos = "";
        for (int i = 0; i < horaString.length(); i++) {
            if (horaString.charAt(i) == ':') {
                end = i;
                break;
            }
            horaS = horaString.substring(0, end);
            minutos = horaString.substring(end + 1, horaString.length());

            minutosGeral = Integer.parseInt(horaS) * 60
                    + Integer.parseInt(minutos);

        }
        return minutosGeral;
    }

    private String discovertHora(int minutos) {
        int hora, minuto;
        String horas;
        minuto = minutos % 60;
        hora = minutos / 60;
        if (minuto < 10) {
            horas = String.valueOf(hora) + "0" + String.valueOf(minuto);
        } else if (hora < 10) {
            horas = "0" + String.valueOf(hora) + String.valueOf(minuto);
        } else if (hora < 10 && minuto < 10) {
            horas = "0" + String.valueOf(hora) + "0" + String.valueOf(minuto);
        } else {
            horas = String.valueOf(hora) + String.valueOf(minuto);
        }
        return horas;
    }

    private void listar() {
        DefaultListModel listModel = new DefaultListModel();
        List<Turma> turmas = listaTurmas.getLista();

        for (Turma turma : turmas) {
            listModel.addElement(turma.toString());
        }

        jListTurmas.setModel(listModel);
    }

    /**
     * Método para listar por turma, que é um código só para cada uma.
     */
    private void listarTurma() {
        DefaultListModel listModel = new DefaultListModel();
        Turma tur = listaTurmas.buscarTurma(Integer.parseInt(jTextFieldBusca.getText()));

        if (tur != null) {
            listModel.addElement(tur.toString());
        } else {
            JOptionPane.showMessageDialog(null, "Turma inexistente");
        }

        jListTurmas.setModel(listModel);
    }

    private void listarEsporte() {
        DefaultListModel listModel = new DefaultListModel();
        List<Turma> turr = listaTurmas.buscarEsporte(Esporte.verificarEsporte(jComboBoxBuscaEsporte.getSelectedItem().toString()));

        if (turr != null) {
            for (Turma turma : turr) {
                listModel.addElement(turma.toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Esporte Inexistente");
        }

        jListTurmas.setModel(listModel);

    }
    
    /**
     * Método para acontecer a extração do código, que neste caso é equivalente
     * à turma.
     *
     * @return - retorna um inteiro com o código(Turma)
     */
    private int getCod() {
        String cod = "", extract = jListTurmas.getSelectedValue();

        for (int i = 0; i < extract.length(); i++) {
            if (extract.charAt(i) == ' ') {
                break;
            } else {
                cod += extract.charAt(i);
            }
        }

        return Integer.parseInt(cod);
    }

    /**
     * Método para acontecer a extração do código, que neste caso é equivalente
     * à turma.
     *
     * @return - retorna um inteiro com o código(Turma)
     */
    private int getCod(String extract) {
        String cod = "";

        for (int i = 0; i < extract.length(); i++) {
            if (extract.charAt(i) == ' ') {
                break;
            } else {
                cod += extract.charAt(i);
            }
        }

        return Integer.parseInt(cod);
    }

    /**
     * Método para listar todos os alunos cadastrados em uma turma.
     */
    private void listarAlunos() {
        DefaultListModel listModel = new DefaultListModel();
        List<Aluno> listAluno = listaTurmas.buscarTurma(getCod()).getAlunos();
        for (Aluno aluno : listAluno) {
            listModel.addElement(aluno.toString());
        }
        if (listModel.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhum aluno cadastrado nesta turma");
        }
        jListAlunosTurma.setModel(listModel);

    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTabbedPaneGerenciadorTurmas = new javax.swing.JTabbedPane();
        jPanelGerenciamentoTurmas = new javax.swing.JPanel();
        jLabelGerenciadorTurmas = new javax.swing.JLabel();
        jButtonAdicionar = new javax.swing.JButton();
        jLabelTurma = new javax.swing.JLabel();
        jTextFieldBusca = new javax.swing.JTextField();
        jComboBoxTipoBusca = new javax.swing.JComboBox<>();
        jScrollPaneTurmas = new javax.swing.JScrollPane();
        jListTurmas = new javax.swing.JList<>();
        jButtonVoltar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonVizualizarAlunos = new javax.swing.JButton();
        jComboBoxBuscaEsporte = new javax.swing.JComboBox<>();
        jPanelDadosTurma = new javax.swing.JPanel();
        jLabelHorarioTurma = new javax.swing.JLabel();
        jFormattedHorarioTurma = new javax.swing.JFormattedTextField();
        jComboBoxModalidadeTurma = new javax.swing.JComboBox<>();
        jLabelModalidadeTurma = new javax.swing.JLabel();
        jLabelMenorIdadeTurma = new javax.swing.JLabel();
        jLabelMaiorIdadeTurma = new javax.swing.JLabel();
        jTextFieldMenorIdadeTurma = new javax.swing.JTextField();
        jTextFieldMaiorIdadeTurma = new javax.swing.JTextField();
        jLabelMaximoAlunosTurma = new javax.swing.JLabel();
        jTextFieldMaximoAlunosTurma = new javax.swing.JTextField();
        jButtonVoltarTurma = new javax.swing.JButton();
        jButtonSalvarTurma = new javax.swing.JButton();
        jLabelFaixaIdade = new javax.swing.JLabel();
        jLabelCriteriosTurma = new javax.swing.JLabel();
        jLabelNroTurma = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanelAlunosTurma = new javax.swing.JPanel();
        jScrollPaneAlunosTurma = new javax.swing.JScrollPane();
        jListAlunosTurma = new javax.swing.JList<>();
        jButtonRemoverAlunoTurma = new javax.swing.JButton();
        jLabelAlunosTurma = new javax.swing.JLabel();
        jButtonVoltarAlunosTurma = new javax.swing.JButton();
        jButtonNovoAlunoTurma = new javax.swing.JButton();
        jButtonAtualizarListaAlunos = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelGerenciadorTurmas.setText("Gerenciador de Turmas");

        jButtonAdicionar.setText("Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jLabelTurma.setText("Buscar:");

        jTextFieldBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscaKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBuscaKeyReleased(evt);
            }
        });

        jComboBoxTipoBusca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turma", "Esporte" }));
        jComboBoxTipoBusca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoBuscaItemStateChanged(evt);
            }
        });

        jListTurmas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListTurmasValueChanged(evt);
            }
        });
        jScrollPaneTurmas.setViewportView(jListTurmas);

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonVizualizarAlunos.setText("Visualizar Alunos");
        jButtonVizualizarAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVizualizarAlunosActionPerformed(evt);
            }
        });

        jComboBoxBuscaEsporte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBuscaEsporteItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelGerenciamentoTurmasLayout = new javax.swing.GroupLayout(jPanelGerenciamentoTurmas);
        jPanelGerenciamentoTurmas.setLayout(jPanelGerenciamentoTurmasLayout);
        jPanelGerenciamentoTurmasLayout.setHorizontalGroup(
            jPanelGerenciamentoTurmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGerenciamentoTurmasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGerenciamentoTurmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneTurmas)
                    .addGroup(jPanelGerenciamentoTurmasLayout.createSequentialGroup()
                        .addComponent(jButtonVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(jButtonVizualizarAlunos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonExcluir))
                    .addGroup(jPanelGerenciamentoTurmasLayout.createSequentialGroup()
                        .addComponent(jLabelGerenciadorTurmas)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelGerenciamentoTurmasLayout.createSequentialGroup()
                        .addComponent(jButtonAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTurma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxTipoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxBuscaEsporte, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelGerenciamentoTurmasLayout.setVerticalGroup(
            jPanelGerenciamentoTurmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGerenciamentoTurmasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelGerenciadorTurmas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelGerenciamentoTurmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxTipoBusca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelGerenciamentoTurmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonAdicionar)
                        .addComponent(jLabelTurma)
                        .addComponent(jTextFieldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxBuscaEsporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTurmas, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelGerenciamentoTurmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVoltar)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonVizualizarAlunos))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPaneGerenciadorTurmas.addTab("Gerenciamento", jPanelGerenciamentoTurmas);

        jLabelHorarioTurma.setText("Horario:*");

        try {
            jFormattedHorarioTurma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabelModalidadeTurma.setText("Modalidade:");

        jLabelMenorIdadeTurma.setText("Menor Idade:*");

        jLabelMaiorIdadeTurma.setText("Maior Idade:*");

        jTextFieldMenorIdadeTurma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMenorIdadeTurmaKeyTyped(evt);
            }
        });

        jTextFieldMaiorIdadeTurma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMaiorIdadeTurmaKeyTyped(evt);
            }
        });

        jLabelMaximoAlunosTurma.setText("Maximo de Alunos:*");

        jTextFieldMaximoAlunosTurma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMaximoAlunosTurmaKeyTyped(evt);
            }
        });

        jButtonVoltarTurma.setText("Voltar");
        jButtonVoltarTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarTurmaActionPerformed(evt);
            }
        });

        jButtonSalvarTurma.setText("Salvar");
        jButtonSalvarTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarTurmaActionPerformed(evt);
            }
        });

        jLabelFaixaIdade.setText("Faixa de idade da Turma:");

        jLabelCriteriosTurma.setText("Critérios da Turma:");

        jLabelNroTurma.setText("Turma:");

        jLabel1.setText("NroTurma");

        javax.swing.GroupLayout jPanelDadosTurmaLayout = new javax.swing.GroupLayout(jPanelDadosTurma);
        jPanelDadosTurma.setLayout(jPanelDadosTurmaLayout);
        jPanelDadosTurmaLayout.setHorizontalGroup(
            jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                                .addComponent(jButtonVoltarTurma)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSalvarTurma))
                            .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                                .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                                        .addComponent(jLabelHorarioTurma)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jFormattedHorarioTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                                        .addComponent(jLabelMenorIdadeTurma)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldMenorIdadeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(72, 72, 72)
                                .addComponent(jLabelMaiorIdadeTurma)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldMaiorIdadeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabelFaixaIdade))
                    .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelNroTurma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(42, 42, 42)
                        .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                                .addComponent(jLabelModalidadeTurma)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxModalidadeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                                .addComponent(jLabelCriteriosTurma)
                                .addGap(134, 134, 134))
                            .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                                .addComponent(jLabelMaximoAlunosTurma)
                                .addGap(3, 3, 3)
                                .addComponent(jTextFieldMaximoAlunosTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDadosTurmaLayout.setVerticalGroup(
            jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxModalidadeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelModalidadeTurma)
                    .addComponent(jLabelNroTurma)
                    .addComponent(jLabel1))
                .addGap(25, 25, 25)
                .addComponent(jLabelCriteriosTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMaximoAlunosTurma)
                    .addComponent(jLabelHorarioTurma)
                    .addComponent(jFormattedHorarioTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMaximoAlunosTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jLabelFaixaIdade)
                .addGap(18, 18, 18)
                .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMenorIdadeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMaiorIdadeTurma)
                    .addComponent(jTextFieldMaiorIdadeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMenorIdadeTurma))
                .addGap(37, 37, 37)
                .addGroup(jPanelDadosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVoltarTurma)
                    .addComponent(jButtonSalvarTurma))
                .addContainerGap())
        );

        jTabbedPaneGerenciadorTurmas.addTab("Dados", jPanelDadosTurma);

        jListAlunosTurma.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListAlunosTurmaValueChanged(evt);
            }
        });
        jScrollPaneAlunosTurma.setViewportView(jListAlunosTurma);

        jButtonRemoverAlunoTurma.setText("Remover aluno");
        jButtonRemoverAlunoTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverAlunoTurmaActionPerformed(evt);
            }
        });

        jLabelAlunosTurma.setText("Todos os alunos da turma selecionada:");

        jButtonVoltarAlunosTurma.setText("Voltar");
        jButtonVoltarAlunosTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarAlunosTurmaActionPerformed(evt);
            }
        });

        jButtonNovoAlunoTurma.setText("Novo Aluno");
        jButtonNovoAlunoTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoAlunoTurmaActionPerformed(evt);
            }
        });

        jButtonAtualizarListaAlunos.setText("Atualizar");
        jButtonAtualizarListaAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarListaAlunosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAlunosTurmaLayout = new javax.swing.GroupLayout(jPanelAlunosTurma);
        jPanelAlunosTurma.setLayout(jPanelAlunosTurmaLayout);
        jPanelAlunosTurmaLayout.setHorizontalGroup(
            jPanelAlunosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlunosTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAlunosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneAlunosTurma)
                    .addGroup(jPanelAlunosTurmaLayout.createSequentialGroup()
                        .addComponent(jLabelAlunosTurma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                        .addComponent(jButtonAtualizarListaAlunos))
                    .addGroup(jPanelAlunosTurmaLayout.createSequentialGroup()
                        .addComponent(jButtonVoltarAlunosTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonNovoAlunoTurma)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRemoverAlunoTurma)))
                .addContainerGap())
        );
        jPanelAlunosTurmaLayout.setVerticalGroup(
            jPanelAlunosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAlunosTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAlunosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAlunosTurma)
                    .addComponent(jButtonAtualizarListaAlunos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneAlunosTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanelAlunosTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRemoverAlunoTurma)
                    .addComponent(jButtonVoltarAlunosTurma)
                    .addComponent(jButtonNovoAlunoTurma))
                .addGap(12, 12, 12))
        );

        jTabbedPaneGerenciadorTurmas.addTab("Alunos(Turma)", jPanelAlunosTurma);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneGerenciadorTurmas, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneGerenciadorTurmas)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarTurmaActionPerformed
        // TODO add your handling code here:
        String horaString = jFormattedHorarioTurma.getText();
        int hora = 0;
        String newHora = "";
        if (!jFormattedHorarioTurma.getText().equals("  :  ")) {
            for (int i = 0; i < horaString.length(); i++) {
                if (horaString.charAt(i) != ':') {
                    newHora += horaString.charAt(i);
                }
            }
            hora = Integer.parseInt(newHora);
        }
        if (jTextFieldMaiorIdadeTurma.getText().equals("") || jTextFieldMenorIdadeTurma.getText().equals("")
                || jTextFieldMaximoAlunosTurma.getText().equals("") || jFormattedHorarioTurma.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha os Campos");

        } else if (Integer.parseInt(jTextFieldMenorIdadeTurma.getText()) >= Integer.parseInt(jTextFieldMaiorIdadeTurma.getText())) {
            JOptionPane.showMessageDialog(null, "Menor Idade maior ou igual com a Maior Idade");
        } else if (Integer.parseInt(jTextFieldMenorIdadeTurma.getText()) < 3 || Integer.parseInt(jTextFieldMaiorIdadeTurma.getText()) >114) {
            JOptionPane.showMessageDialog(null, "Menor Idade deve ser maior que 2 ou Maior Idade deve ser menor que 115");
        } else if (!jFormattedHorarioTurma.getText().equals("")) {
            int end = 0;
            String horaS = "", minutos = "";
            for (int i = 0; i < horaString.length(); i++) {
                if (horaString.charAt(i) == ':') {
                    end = i;
                    break;
                }
            }
            horaS = horaString.substring(0, end);
            minutos = horaString.substring(end + 1, horaString.length());
            if (Integer.parseInt(horaS) > 23 || Integer.parseInt(minutos) > 59) {
                JOptionPane.showMessageDialog(null, "Hora Inválida");
                jFormattedHorarioTurma.setText("");
            } else if (isEdit) {
                if (verificacao("Deseja Realmente Editar? - Observação, isto irá mudar o número da turma!")) {
                    Turma turm = new Turma(hora,
                            Esporte.verificarEsporte(jComboBoxModalidadeTurma.getSelectedItem().toString()),
                            Integer.parseInt(jTextFieldMaximoAlunosTurma.getText()),
                            Integer.parseInt(jTextFieldMenorIdadeTurma.getText()),
                            Integer.parseInt(jTextFieldMaiorIdadeTurma.getText()));

                    listaTurmas.editar(getCod(), turm);

                }

                jTabbedPaneGerenciadorTurmas.setSelectedIndex(0);
                jTabbedPaneGerenciadorTurmas.setEnabledAt(1, false);
                jTabbedPaneGerenciadorTurmas.setEnabledAt(0, true);
                listar();

            } else {
                Turma turm = new Turma(hora,
                        Esporte.verificarEsporte(jComboBoxModalidadeTurma.getSelectedItem().toString()),
                        Integer.parseInt(jTextFieldMaximoAlunosTurma.getText()),
                        Integer.parseInt(jTextFieldMenorIdadeTurma.getText()),
                        Integer.parseInt(jTextFieldMaiorIdadeTurma.getText()));

                listaTurmas.incluir(turm);
                limparCampos();
                listar();

                jTabbedPaneGerenciadorTurmas.setSelectedIndex(0);
                jTabbedPaneGerenciadorTurmas.setEnabledAt(1, false);
                jTabbedPaneGerenciadorTurmas.setEnabledAt(0, true);

                JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
            }
            try {
                listaTurmas.gravar();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonSalvarTurmaActionPerformed

    private void jButtonVoltarTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarTurmaActionPerformed
        // TODO add your handling code here:
        jTabbedPaneGerenciadorTurmas.setSelectedIndex(0);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(0, true);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(1, false);
    }//GEN-LAST:event_jButtonVoltarTurmaActionPerformed

    private void jButtonVizualizarAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVizualizarAlunosActionPerformed
        // TODO add your handling code here:
        jTabbedPaneGerenciadorTurmas.setSelectedIndex(2);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(0, false);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(2, true);
        this.t = listaTurmas.buscarTurma(getCod());
        listarAlunos();
    }//GEN-LAST:event_jButtonVizualizarAlunosActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
        if (verificacao("Deseja realmente excluir esta Turma?")) {
            listaTurmas.excluir(getCod());
            try{
                listaTurmas.gravar();
            }catch(Exception e){
                System.out.println(e.getMessage());
            }
            JOptionPane.showMessageDialog(null, "Turma excluída com sucesso!");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
        isEdit = true;
        setarCampos(getCod());
        jTabbedPaneGerenciadorTurmas.setSelectedIndex(1);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(0, false);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(1, true);
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // TODO add your handling code here:
        new Inicial(this.listaAlunos, this.listaTurmas).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jListTurmasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListTurmasValueChanged
        // TODO add your handling code here:
        if (!jListTurmas.isSelectionEmpty()) {
            jButtonExcluir.setEnabled(true);
            jButtonEditar.setEnabled(true);
            jButtonVizualizarAlunos.setEnabled(true);
        } else {
            jButtonExcluir.setEnabled(false);
            jButtonEditar.setEnabled(false);
            jButtonVizualizarAlunos.setEnabled(false);
        }
    }//GEN-LAST:event_jListTurmasValueChanged

    private void jComboBoxTipoBuscaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoBuscaItemStateChanged
        // TODO add your handling code here:
        jTextFieldBusca.setText("");
        if(jComboBoxTipoBusca.getSelectedItem().toString().equals("Esporte")){
            jTextFieldBusca.setEnabled(false);
            jComboBoxBuscaEsporte.setEnabled(true);
        } else if(jComboBoxTipoBusca.getSelectedItem().toString().equals("Turma")){
            listar();
            jTextFieldBusca.setEnabled(true);
            jComboBoxBuscaEsporte.setEnabled(false);
        }
        
    }//GEN-LAST:event_jComboBoxTipoBuscaItemStateChanged

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        // TODO add your handling code here:
        isEdit = false;
        jTabbedPaneGerenciadorTurmas.setSelectedIndex(1);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(0, false);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(1, true);
        jLabel1.setText(String.valueOf(Turma.getSequence()));
    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jButtonVoltarAlunosTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarAlunosTurmaActionPerformed
        // TODO add your handling code here:
        try {
            listaTurmas.gravar();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        listar();
        jTabbedPaneGerenciadorTurmas.setSelectedIndex(0);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(0, true);
        jTabbedPaneGerenciadorTurmas.setEnabledAt(2, false);
    }//GEN-LAST:event_jButtonVoltarAlunosTurmaActionPerformed

    private void jListAlunosTurmaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListAlunosTurmaValueChanged
        // TODO add your handling code here:
        if (jListAlunosTurma.isSelectionEmpty()) {
            jButtonRemoverAlunoTurma.setEnabled(false);
        } else {
            jButtonRemoverAlunoTurma.setEnabled(true);
        }
    }//GEN-LAST:event_jListAlunosTurmaValueChanged

    private void jButtonNovoAlunoTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoAlunoTurmaActionPerformed
        // TODO add your handling code here:
        if (t.getMAX_ALUNO() > t.getQuantidadeAlunos()) {
            new NovoAluno(this.listaAlunos, this.t).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Turma cheia impossível adicionar um novo aluno!");
        }
    }//GEN-LAST:event_jButtonNovoAlunoTurmaActionPerformed

    private void jTextFieldMenorIdadeTurmaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMenorIdadeTurmaKeyTyped
        // TODO add your handling code here:
        soNumeros(evt);
    }//GEN-LAST:event_jTextFieldMenorIdadeTurmaKeyTyped

    private void jTextFieldMaiorIdadeTurmaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMaiorIdadeTurmaKeyTyped
        // TODO add your handling code here:
        soNumeros(evt);
    }//GEN-LAST:event_jTextFieldMaiorIdadeTurmaKeyTyped

    private void jTextFieldMaximoAlunosTurmaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMaximoAlunosTurmaKeyTyped
        // TODO add your handling code here:
        soNumeros(evt);
    }//GEN-LAST:event_jTextFieldMaximoAlunosTurmaKeyTyped

    private void jButtonAtualizarListaAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarListaAlunosActionPerformed
        // TODO add your handling code here:
        listarAlunos();
    }//GEN-LAST:event_jButtonAtualizarListaAlunosActionPerformed

    private void jButtonRemoverAlunoTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverAlunoTurmaActionPerformed
        // TODO add your handling code here:
        if (verificacao("Deseja realmente remover este aluno da turma?")) {
            t.removeAluno(getCod(jListAlunosTurma.getSelectedValue()));
            try {
                listaTurmas.gravar();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
            JOptionPane.showMessageDialog(null, "Removido com sucesso!");
        }
    }//GEN-LAST:event_jButtonRemoverAlunoTurmaActionPerformed

    private void jTextFieldBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscaKeyReleased
        // TODO add your handling code here:
        char digito = evt.getKeyChar();
        if (jTextFieldBusca.getText().trim().equals("")) {
            listar();
        } else if (jComboBoxTipoBusca.getSelectedItem().toString().equals("Esporte") && digito != '\n'
                && Character.isLetter(digito)) {
            listarEsporte();
        } else if (jComboBoxTipoBusca.getSelectedItem().toString().equals("Turma") && digito != '\n'
                && Character.isDigit(digito)) {
            listarTurma();
        }
    }//GEN-LAST:event_jTextFieldBuscaKeyReleased

    private void jTextFieldBuscaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscaKeyTyped
        // TODO add your handling code here:
        if (jComboBoxTipoBusca.getSelectedItem() == "Turma") {
            soNumeros(evt);
        } else {

        }

    }//GEN-LAST:event_jTextFieldBuscaKeyTyped

    private void jComboBoxBuscaEsporteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBuscaEsporteItemStateChanged
        // TODO add your handling code here:
        if(jComboBoxTipoBusca.getSelectedItem().toString().equals("Esporte")){
            listarEsporte();
        }
    }//GEN-LAST:event_jComboBoxBuscaEsporteItemStateChanged

    //<editor-fold defaultstate="collapsed" desc="Main + Variáveis">
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciadorTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciadorTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciadorTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciadorTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciadorTurmas(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonAtualizarListaAlunos;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovoAlunoTurma;
    private javax.swing.JButton jButtonRemoverAlunoTurma;
    private javax.swing.JButton jButtonSalvarTurma;
    private javax.swing.JButton jButtonVizualizarAlunos;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JButton jButtonVoltarAlunosTurma;
    private javax.swing.JButton jButtonVoltarTurma;
    private javax.swing.JComboBox<String> jComboBoxBuscaEsporte;
    private javax.swing.JComboBox<String> jComboBoxModalidadeTurma;
    private javax.swing.JComboBox<String> jComboBoxTipoBusca;
    private javax.swing.JFormattedTextField jFormattedHorarioTurma;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAlunosTurma;
    private javax.swing.JLabel jLabelCriteriosTurma;
    private javax.swing.JLabel jLabelFaixaIdade;
    private javax.swing.JLabel jLabelGerenciadorTurmas;
    private javax.swing.JLabel jLabelHorarioTurma;
    private javax.swing.JLabel jLabelMaiorIdadeTurma;
    private javax.swing.JLabel jLabelMaximoAlunosTurma;
    private javax.swing.JLabel jLabelMenorIdadeTurma;
    private javax.swing.JLabel jLabelModalidadeTurma;
    private javax.swing.JLabel jLabelNroTurma;
    private javax.swing.JLabel jLabelTurma;
    private javax.swing.JList<String> jListAlunosTurma;
    private javax.swing.JList<String> jListTurmas;
    private javax.swing.JPanel jPanelAlunosTurma;
    private javax.swing.JPanel jPanelDadosTurma;
    private javax.swing.JPanel jPanelGerenciamentoTurmas;
    private javax.swing.JScrollPane jScrollPaneAlunosTurma;
    private javax.swing.JScrollPane jScrollPaneTurmas;
    private javax.swing.JTabbedPane jTabbedPaneGerenciadorTurmas;
    private javax.swing.JTextField jTextFieldBusca;
    private javax.swing.JTextField jTextFieldMaiorIdadeTurma;
    private javax.swing.JTextField jTextFieldMaximoAlunosTurma;
    private javax.swing.JTextField jTextFieldMenorIdadeTurma;
    // End of variables declaration//GEN-END:variables

    //</editor-fold>
}
